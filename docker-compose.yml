services:
  mysql:
    image: mysql:8.0
    container_name: mysql-votacao
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: votacao
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "8084:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - votacao-net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # Porta para comunicação com apps
      - "15672:15672" # Porta para acessar o painel de administração
    networks:
      - votacao-net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  votacao-api:
    build:
      context: .  # Caminho para o Dockerfile da API
    container_name: votacao-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/votacao
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "8080:8080"  # Porta exposta para a API
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - votacao-net

volumes:
  mysql-data:

networks:
  votacao-net:  # Define uma rede Docker comum entre os containers